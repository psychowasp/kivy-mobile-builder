name: Setup.py iOS Wheels test


on: 
  - push
  #- pull_request
  - workflow_dispatch

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.arch }}
    runs-on: self-hosted
    strategy:
      max-parallel: 1
      matrix:
        arch: [arm64_iphoneos, arm64_iphonesimulator, x86_64_iphonesimulator]

    steps:
      - uses: actions/checkout@v5

    #   # Used to host cibuildwheel
    #   - uses: actions/setup-python@v5

    #   - name: Install cibuildwheel
    #     run: python -m pip install cibuildwheel==3.2.1
      - name: Clone GuillaumeFalourd/poc-github-actions PUBLIC repository
        uses: GuillaumeFalourd/clone-github-repo-action@v2.3
        with:
            branch: 'mobile_wheels'
            owner: 'kivy-school'
            repository: 'kivy'

      - name: SDK Root
        id: sdk_root
        run: |
          SDK_ROOT="."
          ARCH="arm64"
          if [[ "${{ matrix.arch }}" == "arm64_iphoneos" ]]; then
              FW_PLAT="ios-arm64"
              SDK_ROOT="$(xcrun --show-sdk-path --sdk iphoneos)"
              echo "iphoneos"
          else
              SDK_ROOT="$(xcrun --show-sdk-path --sdk iphonesimulator)"
              FW_PLAT="ios-arm64_x86_64-simulator"
              if [[ "${{ matrix.arch }}" == "x86_64_iphonesimulator" ]]; then
              ARCH="x86_64"
              fi
              echo "simulator"
          fi
          
          echo "sdk_root=$SDK_ROOT" >> $GITHUB_OUTPUT
    
      - name: Handle SDL3 frameworks
        run: |
          pip3.13 install -i https://pypi.anaconda.org/kivyschool/simple kivy-sdl3-angle -t $PWD/dist/Frameworks

          for PLATFORM in ios-arm64 ios-arm64_x86_64-simulator
          do
            SDL_FW="$PWD/dist/Frameworks/SDL3.xcframework/$PLATFORM/SDL3.framework"
            SDL_IMAGE_FW="$PWD/dist/Frameworks/SDL3_image.xcframework/$PLATFORM/SDL3_image.framework"
            SDL_MIXER_FW="$PWD/dist/Frameworks/SDL3_mixer.xcframework/$PLATFORM/SDL3_mixer.framework"
            SDL_TTF_FW="$PWD/dist/Frameworks/SDL3_ttf.xcframework/$PLATFORM/SDL3_ttf.framework"
      
            ln -s $SDL_FW/SDL3                  $SDL_FW/libSDL3.dylib
            ln -s $SDL_IMAGE_FW/SDL3_image      $SDL_IMAGE_FW/libSDL3_image.dylib
            ln -s $SDL_MIXER_FW/SDL3_mixer      $SDL_MIXER_FW/libSDL3_mixer.dylib
            ln -s $SDL_TTF_FW/SDL3_ttf          $SDL_TTF_FW/libSDL3_ttf.dylib
          done
          
      - name: Configure Angle
        run: |
          ANGLE_VERSION="chromium-7151_rev1"
          ANGLE_FW=$PWD/dist/Frameworks
          mkdir $ANGLE_FW
          
          wget -O angle-iphoneall-universal.tar.gz "https://github.com/kivy/angle-builder/releases/download/$ANGLE_VERSION/angle-iphoneall-universal.tar.gz"
          tar -xzvf angle-iphoneall-universal.tar.gz -C $ANGLE_FW
          
          for PLATFORM in ios-arm64 ios-arm64_x86_64-simulator
          do
            EGL_FW="$ANGLE_FW/libEGL.xcframework/$PLATFORM/libEGL.framework"
            GLES_FW="$ANGLE_FW/libGLESv2.xcframework/$PLATFORM/libGLESv2.framework"
            
            ln -s $EGL_FW/libEGL          $EGL_FW/libEGL.dylib
            ln -s $GLES_FW/libGLESv2      $GLES_FW/libGLESv2.dylib
          done

      
          done

      - name: ls .
        run: |
          ls dist/Frameworks
          ls .

      - name: Build wheel for ${{ matrix.arch }}
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          # CI
          CIBW_PLATFORM: ios
          CIBW_ARCHS: ${{ matrix.arch }}
          KIVY_SPLIT_EXAMPLES: 1
          IOSSDKROOT: ${{ steps.sdk_root.outputs.sdk_root }}
        